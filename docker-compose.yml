version: "3"
services:
  models:
    image: tp33/django
    container_name: models
    external_links:
      - mysql:db
    networks:
      - backend
      - service_mesh
    ports:
      - "8001:8000"
    volumes:
      - ./grandExchange:/app
    command: bash -c "python manage.py makemigrations mysite && python manage.py migrate --run-syncdb && python manage.py loaddata fixtures.json && mod_wsgi-express start-server --reload-on-changes ./mysite/wsgi.py"

  exp:
    image: tp33/django
    container_name: exp
    networks:
      - service_mesh
      - public
    ports:
      - "8002:8000"
    volumes:
      - ./grandExchange_exp:/app
    command: "mod_wsgi-express start-server --reload-on-changes ./grandExchange_exp/wsgi.py"

  web:
    image: tp33/django
    container_name: web
    networks:
      - public
    ports:
      - "8000:8000"
    volumes:
      - ./grandExchange_web:/app
    command: "mod_wsgi-express start-server --reload-on-changes ./grandExchange_web/wsgi.py"

  kafka:
    image: spotify/kafka
    container_name: kafka
    networks:
      - batch_network
      - service_mesh
    environment:
      ADVERTISED_HOST: kafka
      ADVERTISED_PORT: 9092
    hostname: kafka

  es:
    image: elasticsearch:7.4.0
    container_name: es
    environment:
      - discovery.type=single-node
    networks:
      - service_mesh
      - batch_network
    ports:
      - "9200:9200"

  batch:
    image: tp33/django
    container_name: batch
    networks:
      - batch_network
    volumes:
      - ./:/app
    command: bash -c "python batch.py"

  batch-log:
    image: tp33/django
    container_name: batch-log
    networks:
      - batch_network
    volumes:
      - ./:/app
    command: bash -c "python log.py"

  selenium-chrome:
    image: selenium/standalone-chrome
    container_name: selenium-chrome
    links:
      - web:web
    ports:
      - "4444:4444"

  selenium-test:
    image: tp33/django
    container_name: selenium-test
    links:
      - selenium-chrome:selenium-chrome
      - web:web
    volumes:
      - ./:/app
    command: bash -c "pip install selenium"

networks:
  backend:
  service_mesh:
  public:
  batch_network:
