version: "3"
services:
  models:
    image: tp33/django
    container_name: models
    external_links:
      - mysql:db
    networks:
      - backend
      - service_mesh
    ports:
      - "8001:8000"
    volumes:
      - ./grandExchange:/app
    command: bash -c "python manage.py makemigrations mysite && python manage.py migrate --run-syncdb && python manage.py loaddata fixtures.json && mod_wsgi-express start-server --reload-on-changes ./mysite/wsgi.py"

  exp:
    image: tp33/django
    container_name: exp
    networks:
      - service_mesh
      - public
    ports:
      - "8002:8000"
    volumes:
      - ./grandExchange_exp:/app
    command: "mod_wsgi-express start-server --reload-on-changes ./grandExchange_exp/wsgi.py"

  web:
    image: tp33/django
    container_name: web
    networks:
      - public
    volumes:
      - ./grandExchange_web:/app
    command: "mod_wsgi-express start-server --reload-on-changes ./grandExchange_web/wsgi.py"

  web2:
    image: tp33/django
    container_name: web2
    networks:
      - public
    volumes:
      - ./grandExchange_web:/app
    command: "mod_wsgi-express start-server --reload-on-changes ./grandExchange_web/wsgi.py"

  kafka:
    image: spotify/kafka
    container_name: kafka
    networks:
      - batch_network
      - service_mesh
    environment:
      ADVERTISED_HOST: kafka
      ADVERTISED_PORT: 9092
    hostname: kafka

  es:
    image: elasticsearch:7.4.0
    container_name: es
    environment:
      - discovery.type=single-node
    networks:
      - service_mesh
      - batch_network
    expose:
      - "9200"

  batch:
    image: tp33/django
    container_name: batch
    networks:
      - batch_network
    volumes:
      - ./:/app
    command: bash -c "python batch.py"

  batch-log:
    image: tp33/django
    container_name: batch-log
    networks:
      - batch_network
    volumes:
      - ./data:/app
    command: bash -c "python log.py"

  selenium-chrome:
    image: selenium/standalone-chrome
    container_name: selenium-chrome
    networks:
      - service_mesh
      - public
    expose:
      - "4444"

  selenium-test:
    image: tp33/django
    container_name: selenium-test
    networks:
      - service_mesh
    volumes:
      - ./:/app
    command: bash -c "pip install selenium && python loop.py"

  haproxy:
    image: haproxy
    container_name: haproxy
    networks:
      - public
    volumes:
      - ./haproxy://usr/local/etc/haproxy
    ports:
      - "8000:8000"

  spark-master:
    image: gettyimages/spark
    command: bin/spark-class org.apache.spark.deploy.master.Master -h spark-master
    container_name: spark-master
    hostname: spark-master
    environment:
      MASTER: spark://spark-master:7077
      SPARK_CONF_DIR: /conf
    expose:
      - 7001
      - 7002
      - 7003
      - 7004
      - 7005
      - 7006
      - 7077
      - 6066
      - 8000
    ports:
      - 4040:4040
      - 6066:6066
      - 7077:7077
      - 8080:8080
    volumes:
      - ./data:/tmp/data

  spark-worker:
    image: gettyimages/spark
    command: bin/spark-class org.apache.spark.deploy.worker.Worker spark://spark-master:7077
    container_name: spark-worker
    hostname: spark-worker
    environment:
      SPARK_CONF_DIR: /conf
      SPARK_WORKER_CORES: 2
      SPARK_WORKER_MEMORY: 512m
      SPARK_WORKER_PORT: 8881
      SPARK_WORKER_WEBUI_PORT: 8081
    links:
      - spark-master
    expose:
      - 7012
      - 7013
      - 7014
      - 7015
      - 7016
      - 8881
      - 8001
      - 8000
    ports:
      - 8081:8081
    volumes:
      - ./data:/tmp/data

networks:
  backend:
  service_mesh:
  public:
  batch_network:

